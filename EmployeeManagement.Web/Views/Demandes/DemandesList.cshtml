@model IEnumerable<StockManagement.Application.Features.Demandes.DTOs.GetAllListDemandesResponseDTO>

<head>
    <link rel="stylesheet" href="~/css/DemandesList.css">
</head>

<div class="demandes-list-container">
    <h1 class="page-title">Liste des Demandes</h1>

    <div class="auth-buttons mb-4">
        <form method="post" action="/Employees/Logout" class="d-inline">
            <button type="submit" class="btn btn-outline-secondary">Se déconnecter</button>
        </form>
    </div>

    <div class="action-buttons mb-4">
        <a href="/Demandes/export" class="btn btn-success">Exporter vers Excel</a>
        <a href="/Employees/Register" class="btn btn-primary">Créer un compte</a>
    </div>

    <table class="table table-striped table-hover">
        <thead class="table-header">
            <tr>
                <th>DemandeNumber</th>
                <th>Nom</th>
                <th>Prénom</th>
                <th>Direction</th>
                <th>Division</th>
                <th>Service</th>
                <th>Status</th>
                <th>Produits</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var demande in Model)
                {
                    <tr>
                        <td>@demande.DemandeNumber</td>
                        <td>@demande.Nom</td>
                        <td>@demande.Prenom</td>
                        <td>@demande.DirectionNom</td>
                        <td>@demande.DivisionNom</td>
                        <td>@demande.ServiceNom</td>
                        <td class="@(demande.StatusDemandeNom == "Demande Envoyée" ? "status-en-envoye" :
                         demande.StatusDemandeNom == "Annulé" ? "status-annule" :
                         demande.StatusDemandeNom == "En cours de preparation" ? "status-en-cours" :
                         demande.StatusDemandeNom == "Validé" ? "status-valide" :
                         "status-rejete")">
                            @demande.StatusDemandeNom
                        </td>
                        <td>
                            <select class="form-control">
                                @foreach (var produit in demande.LstAllProduitQuantiteDTOs)
                                {
                                    <option value="@produit.ProduitNom">
                                        @produit.ProduitNom - Quantité: @produit.Quantité
                                    </option>
                                }
                            </select>
                        </td>
                        <td>
                            <div class="action-buttons-group">
                                @if (demande.StatusDemandeNom == "Demande Envoyée")
                                {
                                    <button class="btn btn-outline-success btn-sm" onclick="accepterDemande('@demande.Id')">Accepter</button>
                                    <button class="btn btn-outline-danger btn-sm" onclick="refuserDemande('@demande.Id')">Refuser</button>
                                    <button class="btn btn-outline-warning btn-sm" onclick="annulerDemande('@demande.Id')">Annuler</button>
                                }
                                else
                                {
                                    <button class="btn btn-outline-success btn-sm" disabled>Accepter</button>
                                    <button class="btn btn-outline-danger btn-sm" disabled>Refuser</button>
                                    <button class="btn btn-outline-warning btn-sm" disabled>Annuler</button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="9" class="text-center">Aucune demande trouvée.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    // Fonction pour annuler une demande
    function annulerDemande(demandeId) {
        if (confirm("Voulez-vous vraiment annuler cette demande ?")) {
            fetch(`/TestApis/annuler/${demandeId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + localStorage.getItem('access_token') // Utilisez votre méthode pour récupérer le token
                }
            })
            .then(response => {
                if (response.ok) {
                    alert("Demande annulée avec succès.");
                    location.reload(); // Recharge la page pour mettre à jour la liste
                } else {
                    alert("Une erreur s'est produite lors de l'annulation de la demande.");
                }
            })
            .catch(error => {
                console.error("Erreur :", error);
                alert("Une erreur s'est produite.");
            });
        }
    }

    // Fonction pour accepter une demande
    function accepterDemande(demandeId) {
        if (confirm("Voulez-vous vraiment accepter cette demande ?")) {
            fetch(`/TestApis/accepter/${demandeId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + localStorage.getItem('access_token') // Utilisez votre méthode pour récupérer le token
                }
            })
            .then(response => {
                if (response.ok) {
                    alert("Demande acceptée avec succès.");
                    location.reload(); // Recharge la page pour mettre à jour la liste
                } else {
                    alert("Une erreur s'est produite lors de l'acceptation de la demande.");
                }
            })
            .catch(error => {
                console.error("Erreur :", error);
                alert("Une erreur s'est produite.");
            });
        }
    }

    // Fonction pour refuser une demande
    function refuserDemande(demandeId) {
        if (confirm("Voulez-vous vraiment refuser cette demande ?")) {
            fetch(`/TestApis/refuser/${demandeId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + localStorage.getItem('access_token') // Utilisez votre méthode pour récupérer le token
                }
            })
            .then(response => {
                if (response.ok) {
                    alert("Demande refusée avec succès.");
                    location.reload(); // Recharge la page pour mettre à jour la liste
                } else {
                    alert("Une erreur s'est produite lors du refus de la demande.");
                }
            })
            .catch(error => {
                console.error("Erreur :", error);
                alert("Une erreur s'est produite.");
            });
        }
    }
</script>
